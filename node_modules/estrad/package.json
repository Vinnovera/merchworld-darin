{
  "name": "estrad",
  "title": "Estrad",
  "version": "0.1.1",
  "description": "A tool to create modular static frontend templates with a mocked backend",
  "main": "gulpfile-extend.js",
  "dependencies": {
    "chalk": "~0.4.0",
    "estrad-template": "git+https://github.com/Vinnovera/estrad-template.git#108e3d2fa1865d610a0837c2989ca477b16425bc",
    "express": "^3.5.0",
    "extend": "^1.3.0",
    "glob-chokidar": "0.0.3",
    "gulp-concat": "~2.1.7",
    "gulp-estrad-template": "git+https://github.com/Vinnovera/gulp-estrad-template.git#b0ef7b01751369c2b81dbe8f62b951139dece576",
    "gulp-if": "^1.2.5",
    "gulp-ignore": "^1.2.1",
    "gulp-imagemin": "^0.6.1",
    "gulp-jshint": "~1.3.4",
    "gulp-minify-css": "^1.0.0",
    "gulp-prettify": "^0.3.0",
    "gulp-rename": "^1.2.0",
    "gulp-requirejs": "^0.1.3",
    "gulp-stylus": "^2.0.0",
    "gulp-svg2png": "^0.2.3",
    "gulp-uglify": "^1.1.0",
    "http-proxy": "^1.0.2",
    "imagemin-gifsicle": "^0.1.1",
    "imagemin-jpegtran": "^0.1.0",
    "imagemin-optipng": "^0.1.0",
    "imagemin-svgo": "^0.1.0",
    "jshint-stylish": "~0.1.5",
    "minimist": "^1.1.1",
    "node-dir": "^0.1.6",
    "rimraf": "^2.3.0",
    "through2": "^0.6.3",
    "tosource": "^0.1.3",
    "win-spawn": "^2.0.0"
  },
  "devDependencies": {
    "gulp": "~3.5.0",
    "mocha": "^2.2.4",
    "stylus": "^0.50.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Vinnovera/estrad.git"
  },
  "bugs": {
    "url": "https://github.com/Vinnovera/estrad/issues"
  },
  "homepage": "https://github.com/Vinnovera/estrad",
  "readmeFilename": "README.md",
  "author": {
    "name": "Per Stenstr√∂m"
  },
  "license": "BSD-2-Clause",
  "readme": "Estrad\n======\n\nEstrad is a collection of Gulp tasks, and a tool to make building modular HTML/CSS/JS websites easier.\n\nThe goal is to have a build process fast enough that you do not have to wait whenever a file is saved. Because of the possible complexity of HTML templates Estrad will not compile them on file save. Instead a server is included that compiles HTML pages on request.\n\n## Install\n\nEstrad requires node.js, install it if you have not already.\n\nEstrad is installed as a npm module. It's not currently published to npm, to install Estrad as a dev dependency run:\n\n```bash\n$ npm install git+https://github.com/Vinnovera/estrad.git#<latest commit SHA hash> --save-dev\n```\n\n[Gulp][0] needs to be installed globally:\n\n```bash\n$ npm install gulp -g\n```\n\nInclude Estrad in your `Gulpfile.js` and pass it gulp:\n\n```js\nvar\n\tgulp = require('gulp'),\n\testrad = require('estrad')(gulp);\n\ngulp.task('default', ['estrad']);\n```\n\n## Options\n\nEstrad includes a lot of tasks, all are disabled by default. Create `estrad.json` to set options. The available options are:\n\n```json\n{\n\t\"sourceDir\": \"/\",\n\t\"modulesDir\": \"modules\",\n\n\t\"css\": {\n\t\t\"watch\":        false,\n\t\t\"build\":        false,\n\t\t\"preprocessor\": false,\n\t\t\"settings\":     {},\n\t\t\"paths\": {\n\t\t\t\"listen\": [\n\t\t\t\t\"css/**/*.css\",\n\t\t\t\t\"modules/**/*.css\",\n\t\t\t\t\"!css/main.css\"\n\t\t\t],\n\t\t\t\"src\": [\n\t\t\t\t\"css/**/*.css\",\n\t\t\t\t\"modules/**/*.css\", \n\t\t\t\t\"!css/main.css\"\n\t\t\t],\n\t\t\t\"dest\": {\n\t\t\t\t\"file\": \"main.css\",\n\t\t\t\t\"dir\": \"css/\"\n\t\t\t}\n\t\t}\n\t},\n\n\t\"html\": {\n\t\t\"build\": false,\n\t\t\"paths\": {\n\t\t\t\"src\": [\n\t\t\t\t\"./**/*.html\",\n\t\t\t\t\"!./modules/**/*.html\", \n\t\t\t\t\"!./node_modules/**/*.html\"\n\t\t\t],\n\t\t\t\"dest\": \"./package\"\n\t\t}\n\t},\n\n\t\"images\": {\n\t\t\"watch\": false,\n\t\t\"paths\": {\n\t\t\t\"listen\": [\n\t\t\t\t\"img/**/*.jpg\", \n\t\t\t\t\"img/**/*.gif\", \n\t\t\t\t\"img/**/*.png\", \n\t\t\t\t\"img/**/*.svg\"\n\t\t\t]\n\t\t}\n\t},\n\n\t\"js\": {\n\t\t\"watch\": false,\n\t\t\"build\": false,\n\t\t\"paths\": {\n\t\t\t\"require\": \"js/vendor/require.js\",\n\t\t\t\"listen\": [\n\t\t\t\t\"js/**/*.js\", \n\t\t\t\t\"modules/**/*.js\", \n\t\t\t\t\"!/node_modules/**/*.js\"\n\t\t\t],\n\t\t\t\"src\":  \"js/main.js\",\n\t\t\t\"dest\": \"package/js/main.js\"\n\t\t}\n\t},\n\n\t\"server\": {\n\t\t\"start\": false,\n\t\t\"proxy\": false,\n\t\t\"port\":  8080,\n\t\t\"templateSettings\": {}\n\t},\n}\n```\n\n### sourceDir\nDirectory of source files. \n\n### modulesDir\nDirectory of html partials.\n\n### css\n\n#### preprocessor\n\nCan be:\n\n`false` for no preprocessor.\n\n`\"sass\"` to use SASS with Compass. Requires that you add `config.rb`.\n\n`\"stylus\"` to use Stylus with Nib.\n\n#### settings\nStylus settings object. Values here will be passed to [gulp-stylus][4]. \n\nExample:\n\n```json\n{\n\t\"compress\": true,\n\t\"linenos\": true,\n\t\"url\": \"url\"\n}\n```\n\nThe `url` option will base64 images and inline them in the css file.\n\n### images\n\nSmushes `svg`, `png`, `jpg` and `gif` files. Will also create a `png` from any `svg`.\n\n### js\n\n#### watch\nAt the moment all this does is lint your files with [JSHint][1]. Estrad comes with a basic setup of rules. To change the ruleset add a `.jshintrc` file. \n\n#### build\nRequire.js optimization tool [r.js][3].\n\n### server\n\n#### template\n\n##### templateSettings\ndoT.templateSettings\n\nSet these to avoid running your client templates on the server.\n\n## Watching files\n\n```bash\n$ gulp estrad\n```\n\n## Build files\n\nTo build the project files type:\n\n```bash\n$ gulp estrad-build\n```\n\nThis will build any `css`, `js` and `html` files.\n\nThe idea is that this process will compile a \"deliverable\" of all front end code. This is a goal for the future.\n\n## Write a module\n\nFirst you need a page, see `index.html` for an example. It looks like this:\n\n\t{=part.header}\n\t{=part.example}\n\t{=part.footer}\n\nThe structure of a module can look like this:\n\n\t/example/example.html\n\t/example/example.json\n\t/example/alternative.json\t\n\t/example/example.css\n\t/example/example.js\n\nTo use the `alternative.json` file include the module as `{=part.example.alternative}`.\n\nTo create `header` and `footer` modules, add the files `/modules/header/header.html` and `/modules/footer/footer.html`.\n\n### doT\nEstrad uses [doT][2] to for including mock data. Use the `it` namespace to access properties set in the `json` files. The mock data is self-contained and will only affect that module.\n\n## Reverse proxy\nEstrad includes a reverse proxy. To set up a path add it to `routes.json`. This can be a local resourse or cross domain.\n\nGet queries can be overridden in `routes.json`.\n\n[0]: https://github.com/gulpjs/gulp\n[1]: https://github.com/jshint/jshint/\n[2]: http://olado.github.io/doT/index.html\n[3]: http://requirejs.org/docs/optimization.html\n[4]: https://github.com/stevelacy/gulp-stylus",
  "gitHead": "cca2b5624117250f629e9be7d89ad3dc5d5d0432",
  "_id": "estrad@0.1.1",
  "_shasum": "32e88919986743a078ac29cc46fc424fad4e24d4",
  "_from": "git+https://github.com/Vinnovera/estrad.git",
  "_resolved": "git+https://github.com/Vinnovera/estrad.git#d861279fb277c364655cb29346d460483e0855c6"
}
